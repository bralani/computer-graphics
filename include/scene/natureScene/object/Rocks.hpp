#ifndef ROCKS_HPP
#define ROCKS_HPP

#include <vector>
#include <memory>
#include <random>
#include "scene/natureScene/mesh/Rock.hpp"

class Rocks : public Object
{
public:
  Rocks() : Object()
  {
    std::vector<glm::vec3> rockPositions = {
      {  61.0329f,  -0.946385f,   12.1251f },
      {  85.6103f,  -2.27465f,    25.1730f },
      { 182.2740f, -10.0534f,    56.4580f },
      { 190.6440f,  -9.39312f,   57.7146f },
      { 198.6380f,  -9.71748f,   68.6636f },
      { 201.5350f,  -8.37317f,   76.8612f },
      { 202.1140f,  -8.37317f,   85.7753f },
      { 203.4970f,  -8.37317f,   91.2500f },
      { 206.7760f,  -8.37317f,   93.3552f },
      { 209.6020f,  -8.37317f,   99.8198f },
      { 202.8360f,  -8.70814f,  116.3510f },
      { 189.1850f,  -9.06861f,  137.5620f },
      { 175.5490f,  -9.06861f,  148.1760f },
      { 168.3830f,  -9.06861f,  155.9510f },
      { 162.6360f,  -7.92778f,  163.9400f },
      { 151.6240f,  -6.87666f,  170.7710f },
      { 131.0370f,  -5.87462f,  178.6980f },
      { 122.7660f,  -5.25139f,  188.2170f },
      {  96.5020f,  -8.51660f,  192.2950f },
      {  82.5303f,  -9.97031f,  190.7020f },
      {  67.2515f,  -9.59702f,  178.8520f },
      {  48.7361f,  -8.68556f,  171.7150f },
      {  23.8093f,  -8.05035f,  151.3580f },
      {   5.8119f,  -6.66046f,  143.5900f },
      {  -9.9840f,  -5.42719f,  140.4220f },
      { -31.1495f,  -5.06172f,  130.6350f },
      { -36.0464f,  -4.73634f,  128.3700f },
      { -54.5168f,  -5.80763f,  124.4180f },
      { -67.9876f,  -5.52664f,  119.9840f },
      { -78.6591f,  -5.20928f,  118.3360f },
      { -86.2330f,  -4.87935f,  115.1530f },
      { -95.9104f,  -4.87935f,  113.2180f },
      {-119.6510f,  -6.86625f,   97.7111f },
      {-136.9970f,  -7.63456f,   90.3449f },
      {-153.1000f,  -9.19815f,   74.4130f },
      {-133.2180f, -11.97640f,   13.8824f},
      {-131.0660f,  -9.16059f,    4.4811f},
      {-120.8400f,  -7.46365f,   -6.4719f},
      {-114.7840f,  -5.19159f,  -21.7790f},
      {-114.2340f,  -3.57249f,  -27.5459f},
      {-111.2470f,   0.43023f,  -34.6360f},
      { -88.9472f,   2.71510f,  -45.1911f},
      { -69.3667f,   1.06478f,  -76.2529f},
      {  -8.8760f,   7.15619f, -103.8310f},
      {  15.4371f,   8.12968f, -117.5230f},
      {  29.8801f,   6.75701f, -112.8410f},
      {  34.6360f,   6.75701f, -111.3000f},
      {  39.6258f,   6.75701f, -109.6820f},
      {  48.8054f,   5.70004f, -111.6030f},
      {  60.4408f,   3.22625f, -115.2580f},
      {  74.7163f,   1.91717f, -113.2100f},
      {  99.7396f,   1.43347f, -128.3540f},
      { 104.1400f,   2.20691f, -131.8010f},
      { 123.3850f,   6.82549f, -142.9640f},
      { 149.8230f,  -2.09760f, -127.3450f},
      { 157.6170f,  -2.09760f, -118.0860f},
      { 166.1900f,  -0.79429f, -105.8530f},
      { 169.9550f,  -0.08287f,  -98.3110f},
      { 167.9030f,   1.49157f,  -82.1353f},
      { 180.4580f,   1.49157f,  -76.5471f},
      { 185.6590f,   1.49157f,  -68.1980f},
      { 185.7680f,  -5.28765f,  -29.2544f},
      { 184.5270f,  -6.92066f,   -7.3667f},
      { 190.3670f,  -6.92066f,   -0.2990f},
      { 202.3570f,  -6.74003f,    5.2721f},
      { 208.7100f,  -6.74003f,   19.8323f},
      { 200.3270f,  -9.93071f,   32.6668f},
      { 179.2220f, -10.23390f,   39.1281f},
      { 126.8870f, -10.23390f,   22.0875f},
      { 111.2570f,  -7.48919f,   28.4949f},
      {  95.6307f,  -2.38952f,   24.4168f},
      {  70.5465f,  -2.71007f,    4.8839f},
      {  54.1892f,  -4.75685f,  -10.0795f},
      {  42.0550f,  -3.05470f,  -14.1034f},
      {  35.4790f,  -2.36054f,  -14.6130f},
      {  25.9138f,  -0.64192f,  -16.2127f},
      {  15.5776f,   2.47459f,  -19.3488f},
      {   6.5994f,   1.07675f,  -23.0569f},
      { -21.6326f,  -1.29418f,  -21.4389f},
      { -28.5411f,  -0.93882f,  -20.5922f},
      { -35.4455f,  -0.93882f,  -19.7461f},
      { -47.2624f,  -0.95892f,  -23.7531f},
      { -56.9933f,  -2.04253f,  -24.8051f},
      { -71.9474f,  -2.04253f,  -31.7149f},
      { -94.3350f,   1.59199f,  -34.7181f},
      {-112.2960f,  -6.62764f,   -3.6680f},
      {-114.1980f,  -7.67343f,    6.8018f},
      {-126.8040f, -10.14430f,   76.2030f},
      {-129.1290f,  -8.08139f,   89.0041f},
      {-128.8450f,  -7.41235f,  100.8790f},
      {-116.7920f,  -8.38882f,  137.7150f},
      {-118.9290f,  -7.05656f,  130.3710f},
      {-116.7480f,  -7.05656f,  125.5120f},
      {-109.0780f,  -6.36342f,  127.0080f},
      {-105.3120f,  -5.01808f,  128.6750f},
      { -92.9065f,  -5.35814f,  134.1660f},
      { -88.3800f,  -5.35814f,  136.1700f},
      { -84.2289f,  -5.35814f,  138.0080f},
      { -77.1078f,  -6.05444f,  146.1740f},
      { -71.6969f,  -6.05444f,  147.8050f},
      { -65.7022f,  -6.05444f,  144.1110f},
      { -61.4201f,  -4.99743f,  141.4720f},
      { -43.1213f,  -6.76458f,  136.0520f},
      { -40.0333f,  -6.07282f,  135.3710f},
      { -18.9361f,  -5.34422f,  130.7180f},
      {  -0.8176f,  -5.33315f,  140.4330f},
      {   5.1100f,  -6.69835f,  147.5520f},
      {  19.6980f,  -7.04044f,  153.1370f},
      {  40.8336f,  -8.72012f,  155.6680f},
      {  46.6497f,  -8.38437f,  156.3650f},
      {  53.2556f,  -8.04447f,  157.1560f},
      {  69.1055f,  -7.41370f,  155.8140f},
      {  74.8079f,  -6.71333f,  154.5680f},
      {  82.3951f,  -5.94784f,  152.9100f},
      {  98.5511f,  -6.29960f,  155.9610f},
      { 105.3590f,  -6.96406f,  158.3640f},
      { 120.2760f,  -7.61178f,  159.4340f},
      { 133.0030f,  -7.94449f,  142.3050f},
      { 144.4260f,  -7.94449f,  145.1070f},
      { 152.7400f,  -9.24854f,  157.7130f},
      { 167.0380f,  -9.24854f,  136.7790f},
      { 172.8090f,  -7.92431f,  118.4000f},
      { 190.2540f,  -8.33408f,  101.0880f},
      { 195.0630f,  -7.99482f,   92.0039f},
      { 196.0470f,  -7.99482f,   83.5439f},
      { 203.2090f,  -9.72857f,   62.4324f},
      { 209.0500f,  -9.03294f,   50.1529f},
      { 215.5570f,  -6.30984f,   36.4737f},
      { 189.7570f,  -7.26191f,   -0.3782f},
      { 182.8200f,  -6.95436f,  -23.0135f},
      { 180.5870f,  -6.25868f,  -33.1500f},
      { 178.6630f,  -4.93278f,  -41.8844f},
      { 174.1350f,  -2.85218f,  -50.2810f},
      { 165.0640f,  -0.46930f,  -61.9024f},
      { 161.0800f,   1.88753f,  -72.2940f},
      { 157.3770f,   1.88753f,  -85.9108f},
      { 155.8890f,   2.58972f,  -90.2858f},
      { 153.9590f,   2.58972f,  -95.9563f},
      { 151.6220f,   1.92716f, -102.8260f},
      { 146.5910f,   0.20355f, -117.6140f},
      { 141.1310f,   0.20355f, -123.6430f}
    };

    auto meshes = std::vector<std::shared_ptr<Mesh>>();
    meshes.reserve(rockPositions.size());

    std::random_device rd;
    std::mt19937       gen(rd());
    std::uniform_real_distribution<float> angle_dist(0.0f, 360.0f);

    for (const auto& pos : rockPositions) {
      auto rock = std::make_shared<RockMesh>();

      rock->transform.setPosition(pos);

      float angleY = angle_dist(gen);
      rock->transform.setRotation(glm::vec3(0.0f, angleY, 0.0f));

      meshes.push_back(rock);
    }

    this->setMeshes(meshes);
  }

};

#endif // ROCKS_HPP